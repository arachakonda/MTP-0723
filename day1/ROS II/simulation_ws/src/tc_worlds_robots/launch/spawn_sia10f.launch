<launch>
    <arg name="sim" default="true" />
    <param name="robot_description" command="$(find xacro)/xacro.py $(find sia10f_description)/urdf/sia10f.gazebo.xacro"/>
    <!-- We resume the logic in empty_world.launch, changing only the name of the world to be launched -->
    <group if="$(arg sim)">
        <node name="spawn_urdf" pkg="gazebo_ros" type="spawn_model" args="-param robot_description -urdf -model sia10f"/>
    </group>
    <remap unless="$(arg sim)" from="/follow_joint_trajectory" to="/sia10f/joint_trajectory_controller/follow_joint_trajectory"/>
    <!-- Load joint controller configurations from YAML file to parameter server -->
    <rosparam file="$(find sia10f_control)/config/sia10f_control.yaml" command="load"/>
    <!-- load the controllers -->
    <node name="controller_spawner" pkg="controller_manager" type="spawner" ns="sia10f" args="joint_trajectory_controller joint_state_controller"/>
    <include file="$(find sia10f_gazebo_moveit_config)/launch/moveit_planning_execution.launch.xml">
        <arg name="sim" value="$(arg sim)"/>
    </include>
    <!-- convert joint states to TF transforms for rviz, etc -->
    <node name="robot_state_publisher" pkg="robot_state_publisher" type="robot_state_publisher"
    respawn="false" output="screen">
        <remap from="/joint_states" to="/sia10f/joint_states"/>
    </node>
    <include file="$(find sia10f_gazebo_moveit_config)/launch/moveit_rviz.launch"/>
</launch>
