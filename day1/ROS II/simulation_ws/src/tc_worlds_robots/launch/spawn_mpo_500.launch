<?xml version="1.0" encoding="UTF-8"?>
<launch>
    <!--set to the required robot and world-->
    <arg name="robotname" value="mpo_500"/>
    <arg name="robotworld" value="neobotix_env2.world"/>
    <!--To launch RVIZ set the value to true-->
    <arg name="rviz" value="true"/>
    <!--To launch scanunifier set the value to true-->
    <arg name="scanunifier" value="false"/>
    <!--To move robot using teleop_keyboard-->
    <arg name="teleop_keyboard" value="false"/>
    <!--To move robot using joystick-->
    <arg name="joystick" value="false"/>
    <!--__For the Navigation Package__-->
    <!--To launch gmapping to create a map-->
    <!--Before changing the value to true both arg 'amcl' and 'move_base' must be set to false-->
    <arg name="gmapping" value="false"/>
    <!--To launch amcl-->
    <arg name="amcl" value="false"/>
    <!--To launch move base-->
    <arg name="navigation" value="false"/>
    <!--To set the local planner-->
    <arg name="localplanner" value="teb"/>
    <!---=================================================================================================================================================================-->
    <!--Robot description to param server-->
    <param name="robot_description" command="$(find xacro)/xacro.py '$(find mpo_500_description)/urdf/$(arg robotname).urdf.xacro'"/>
    <node name="$(arg robotname)_spawn" pkg="gazebo_ros" type="spawn_model" output="screen"
  args="-urdf -param robot_description -model $(arg robotname) " />
    <!-- For mpo_500 -->
    <include file="$(find neo_simulation)/config/controller/launch/controller_utils.launch"/>
    <rosparam file="$(find neo_simulation)/config/controller/arm_controller_ur10.yaml" command="load"/>
    <node name="arm_controller_spawner" pkg="controller_manager" type="controller_manager" args="spawn arm_controller" respawn="false" output="screen"/>
    <!--To publish Joint and Robot state-->
    <node name="joint_state_publisher" pkg="joint_state_publisher" type="joint_state_publisher">
        <param name="rate" value="20.0"/>
    </node>
    <node name="robot_state_publisher" pkg="robot_state_publisher" type="state_publisher">
        <param name="publish_frequency" value="20.0"/>
    </node>
    <!---=================================================================================================================================================================-->
    <!--Neo control Package  **To use teleop-keyboard and joystick, neo_control package must be cloned to the workspace**-->
    <!--if arg teleop-keyboard is set to true-->
    <group if="$(arg teleop_keyboard)">
        <node pkg="turtlebot_teleop" type="turtlebot_teleop_key" name="turtlebot_teleop_keyboard"  output="screen">
            <param name="scale_linear" value="0.5" type="double"/>
            <param name="scale_angular" value="1.5" type="double"/>
            <remap from="turtlebot_teleop_keyboard/cmd_vel" to="cmd_vel"/>
        </node>
    </group>
    <!--if arg joystick is set to true (default=false)-->
    <group if="$(arg joystick)">
        <include file="$(find neo_teleop)/ros/launch/teleop.launch"/>
    </group>
    <!---=================================================================================================================================================================-->
    <!--Naviagation Package-->
    <!--if arg gmapping is set to true (default=false)-->
    <group if="$(arg gmapping)">
        <include file="$(find neo_simulation)/config/$(arg robotname)/gmapping/launch/$(arg robotname)_gmapping.launch"/>
    </group>
    <!--if arg amcl is set to true (default=false)-->
    <group if="$(arg amcl)">
        <include file="$(find neo_simulation)/config/$(arg robotname)/amcl/launch/$(arg robotname)_amcl.launch"/>
    </group>
    <!--if arg move_base is set to true-->
    <group if="$(arg navigation)">
        <include file="$(find neo_simulation)/config/$(arg robotname)/navigation/$(arg localplanner)_local_planner/$(arg robotname)_movebase_$(arg localplanner).launch"/>
    </group>
</launch>
